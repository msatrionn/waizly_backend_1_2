1. Tampilkan seluruh data dari tabel "employees" (5 Points) :

SELECT * FROM employees

2. Berapa banyak karyawan yang memiliki posisi pekerjaan (job title) "Manager"? (5 Points) :

SELECT count(1)
    FROM employees
    where job_title = 'Manager'

3. Tampilkan daftar nama dan gaji (salary) dari karyawan yang bekerja di departemen "Sales" atau
"Marketing" (10 Points) :

SELECT name, salary
    FROM employees
    where departement IN ('Sales','Marketing');

4. Hitung rata-rata gaji (salary) dari karyawan yang bergabung (joined) dalam 5 tahun terakhir (berdasarkan
kolom "joined_date") (10 Points) :

SELECT AVG(salary) AS average_salary
    FROM employees
    WHERE joined_date >= CURDATE() - INTERVAL 5 YEAR;

5. Tampilkan 5 karyawan dengan total penjualan (sales) tertinggi dari tabel "employees" dan "sales_data"
(10 Points) :

SELECT employees.name, SUM(sales_data.sales) AS total_sales
    FROM employees
    JOIN sales_data ON employees.employee_id = sales_data.employee_id
    GROUP BY employees.name
    ORDER BY total_sales DESC
    LIMIT 5;

6. Tampilkan nama, gaji (salary), dan rata-rata gaji (salary) dari semua karyawan yang bekerja di departemen
yang memiliki rata-rata gaji lebih tinggi dari gaji rata-rata di semua departemen (15 Points) :

SELECT name, salary, (SELECT AVG(salary) FROM employees e2 WHERE e2.departement = employees.departement) as avg_salary_departement
    FROM employees
    WHERE salary > (SELECT AVG(salary) FROM employees e1 WHERE e1.departement = employees.departement);

7. Tampilkan nama dan total penjualan (sales) dari setiap karyawan, bersama dengan peringkat (ranking)
masing-masing karyawan berdasarkan total penjualan. Peringkat 1 adalah karyawan dengan total
penjualan tertinggi (25 Points) :

SET @curRank = 0;

SELECT
    name,
    total_sales,
    @curRank := @curRank + 1 AS rank
FROM (
    SELECT
        employees.name,
        SUM(sales_data.sales) as total_sales
    FROM
        employees
    JOIN
        sales_data ON employees.employee_id = sales_data.employee_id
    GROUP BY
        employees.name
    ORDER BY
        total_sales DESC
) AS ranked_data;

8.Buat sebuah stored procedure yang menerima nama departemen sebagai input, dan mengembalikan
daftar karyawan dalam departemen tersebut bersama dengan total gaji (salary) yang mereka terima (20
Points) :

DELIMITER //

CREATE PROCEDURE GetDepartementEmployees(IN departementName VARCHAR(50))
BEGIN
    SELECT
        employees.name AS employee_name,
        employees.salary,
        employees.departement
    FROM
        employees
    WHERE
        employees.departement = departementName;

END //

DELIMITER ;

CALL GetDepartementEmployees('Sales');


